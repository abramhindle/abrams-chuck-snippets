// karplus + strong plucked string filter
// Ge Wang (gewang@cs.princeton.edu)

// feedforward
SinOsc imp => OneZero lowpass => dac;
// feedback
lowpass => Delay delay => lowpass;

Std.rand2f(0.999,0.99999) => float R;
//.99999 => float R;
// our delay order
Std.rand2f(1,2000) => float L;
<<<R>>>;
<<<L>>>;

//[ 79 , 79 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 83 , 83 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 67 , 67 , 66 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 66 , 67 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 66 , 66 , 64 , 64 , 64 , 64 , 62 , 62 , 74 , 74 , 74 , 74 , 76 , 76 , 74 , 74 , 76 , 76 , 77 , 77 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 79 , 79 , 78 , 78 , 76 , 76 , 78 , 78 , 79 , 79 , 78 , 78 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 72 , 72 , 72 , 72 , 81 , 81 , 72 , 72 , 71 , 71 , 67 , 67 , 66 , 66 , 66 , 66 , 67 , 67 , 66 , 66 , 67 , 67 , 71 , 71 , 71 , 71 , 73 , 73 , 71 , 71 , 73 , 73 , 74 , 74 , 74 , 74 , 73 , 73 , 71 , 71 , 69 , 69 , 67 , 71 , 76 , 79 , 67 , 71 , 76 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 79 , 79 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 73 , 73 , 71 , 71 , 73 , 73 , 74 , 74 , 73 , 73 , 74 , 74 , 73 , 73 , 74 , 74 , 73 , 73 , 76 , 76 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 69 , 69 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 67 , 67 , 66 , 66 , 64 , 64 , 74 , 74 , 73 , 73 , 74 , 74 , 76 , 76 , 74 , 74 , 73 , 73 , 71 , 71 , 69 , 69 , 79 , 79 , 71 , 71 , 73 , 73 , 73 , 73 , 74 , 74 , 76 , 76 , 74 , 74 , 73 , 73 , 73 , 73 , 74 , 74 , 79 , 79 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 83 , 83 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 67 , 67 , 66 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 67 , 66 , 67 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 66 , 66 , 64 , 64 , 64 , 64 , 62 , 62 , 74 , 74 , 74 , 74 , 76 , 76 , 74 , 74 , 76 , 76 , 77 , 77 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 79 , 79 , 78 , 78 , 76 , 76 , 78 , 78 , 79 , 79 , 78 , 78 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 72 , 72 , 72 , 72 , 81 , 81 , 72 , 72 , 71 , 71 , 67 , 67 , 66 , 66 , 66 , 66 , 67 , 67 , 66 , 66 , 67 , 67 , 71 , 71 , 71 , 71 , 73 , 73 , 71 , 71 , 73 , 73 , 74 , 74 , 74 , 74 , 73 , 73 , 71 , 71 , 69 , 69 , 67 , 71 , 76 , 79 , 67 , 71 , 76 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 79 , 79 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 73 , 73 , 71 , 71 , 73 , 73 , 74 , 74 , 73 , 73 , 74 , 74 , 73 , 73 , 74 , 74 , 73 , 73 , 76 , 76 , 81 , 81 , 79 , 79 , 78 , 78 , 76 , 76 , 74 , 74 , 69 , 69 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 67 , 67 , 66 , 66 , 64 , 64 , 74 , 74 , 73 , 73 , 74 , 74 , 76 , 76 , 74 , 74 , 73 , 73 , 71 , 71 , 69 , 69 , 79 , 79 , 71 , 71 , 73 , 73 , 73 , 73 , 74 , 74 , 76 , 76 , 74 , 74 , 73 , 73 , 73 , 73 , 74 , 74 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 69 , 71 , 69 , 71 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 76 , 76 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 67 , 67 , 79 , 79 , 78 , 78 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 75 , 75 , 76 , 76 , 81 , 81 , 83 , 83 , 81 , 81 , 79 , 79 , 81 , 81 , 78 , 78 , 76 , 76 , 75 , 75 , 71 , 71 , 76 , 76 , 78 , 78 , 79 , 79 , 78 , 78 , 78 , 78 , 76 , 76 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 79 , 79 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 67 , 67 , 66 , 66 , 64 , 64 , 66 , 66 , 76 , 76 , 76 , 76 , 75 , 75 , 78 , 78 , 79 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 78 , 78 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 69 , 69 , 64 , 64 , 69 , 69 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 69 , 69 , 66 , 66 , 69 , 69 , 72 , 72 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 67 , 67 , 62 , 62 , 67 , 67 , 71 , 71 , 67 , 67 , 72 , 72 , 74 , 74 , 76 , 76 , 77 , 77 , 76 , 76 , 74 , 74 , 76 , 76 , 72 , 72 , 67 , 67 , 72 , 72 , 76 , 76 , 72 , 72 , 78 , 78 , 79 , 79 , 81 , 81 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 67 , 67 , 71 , 71 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 62 , 62 , 67 , 67 , 66 , 66 , 66 , 66 , 67 , 67 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 69 , 71 , 69 , 71 , 69 , 69 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 76 , 76 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 67 , 67 , 79 , 79 , 78 , 78 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 75 , 75 , 76 , 76 , 81 , 81 , 83 , 83 , 81 , 81 , 79 , 79 , 81 , 81 , 78 , 78 , 76 , 76 , 75 , 75 , 71 , 71 , 76 , 76 , 78 , 78 , 79 , 79 , 78 , 78 , 78 , 78 , 76 , 76 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 79 , 79 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 67 , 67 , 66 , 66 , 64 , 64 , 66 , 66 , 76 , 76 , 76 , 76 , 75 , 75 , 78 , 78 , 79 , 79 , 81 , 81 , 79 , 79 , 78 , 78 , 78 , 78 , 76 , 76 , 78 , 78 , 75 , 75 , 75 , 75 , 76 , 76 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 69 , 69 , 67 , 67 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 69 , 69 , 64 , 64 , 69 , 69 , 72 , 72 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 69 , 69 , 66 , 66 , 69 , 69 , 72 , 72 , 76 , 76 , 74 , 74 , 72 , 72 , 71 , 71 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 67 , 67 , 62 , 62 , 67 , 67 , 71 , 71 , 67 , 67 , 72 , 72 , 74 , 74 , 76 , 76 , 77 , 77 , 76 , 76 , 74 , 74 , 76 , 76 , 72 , 72 , 67 , 67 , 72 , 72 , 76 , 76 , 72 , 72 , 78 , 78 , 79 , 79 , 81 , 81 , 72 , 72 , 71 , 71 , 69 , 69 , 71 , 71 , 72 , 72 , 74 , 74 , 67 , 67 , 71 , 71 , 69 , 69 , 67 , 67 , 66 , 66 , 67 , 67 , 62 , 62 , 67 , 67 , 66 , 66 , 66 , 66 , 67 , 67 ] @=> int notes[];

[ 0.5 , 0.5 , 2 , 1 , 2 , 1 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.00833333 , 0.325 , 0.00833333 , 0.991667 , 1 , 0.5 , 0.5 , 1 , 0.5 , 0.5 , 1 , 2 , 0.5 , 0.5 , 2 , 1 , 2 , 1 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 1.5 , 0.5 , 1.5 , 0.5 , 1.5 , 0.5 , 1.5 , 1 , 2 , 1 , 0.5 , 2.5 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 2 , 1 , 1 , 1 , 1 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 1 , 1 , 2 , 1 , 1 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 1 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 1 , 1.5 , 0.5 , 0.5 , 0.5 , 2 , 0.5 , 0.5 , 2 , 1 , 2 , 1 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.00833333 , 0.325 , 0.00833333 , 0.991667 , 1 , 0.5 , 0.5 , 1 , 0.5 , 0.5 , 1 , 2 , 0.5 , 0.5 , 2 , 1 , 2 , 1 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 1.5 , 0.5 , 1.5 , 0.5 , 1.5 , 0.5 , 1.5 , 1 , 2 , 1 , 0.5 , 2.5 , 1 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 2 , 1 , 1 , 1 , 1 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 1 , 1 , 2 , 1 , 1 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 1 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 1 , 1.5 , 0.5 , 0.5 , 0.5 , 2 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.00833333 , 0.325 , 0.00833333 , 0.325 , 0.333333 , 0.333333 , 0.5 , 0.5 , 0.5 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 1 , 2 , 0.5 , 0.5 , 2 , 0.25 , 0.25 , 0.5 , 0.5 , 0.5 , 0.5 , 1 , 2 , 2 , 0.5 , 0.5 , 2 , 1 , 2 , 1 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 1.5 , 0.5 , 1.5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0.5 , 0.5 , 1 , 2 , 2 , 1 , 2 , 0.5 , 0.5 , 2 , 2 , 1 , 1 , 2 , 1 , 1 , 0.5 , 0.5 , 1 , 0.5 , 0.5 , 1 , 2 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.333333 , 0.00833333 , 0.325 , 0.00833333 , 0.325 , 0.333333 , 0.333333 , 0.5 , 0.5 , 0.5 , 0.5 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 1 , 2 , 0.5 , 0.5 , 2 , 0.25 , 0.25 , 0.5 , 0.5 , 0.5 , 0.5 , 1 , 2 , 2 , 0.5 , 0.5 , 2 , 1 , 2 , 1 , 0.5 , 0.5 , 0.5 , 0.5 , 0.5 , 1.5 , 0.5 , 1.5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0.5 , 0.5 , 1 , 2 , 2 , 1 , 2 , 0.5 , 0.5 , 2 , 2 , 1 , 1 , 2 , 1 , 1 , 0.5 , 0.5 , 1 , 0.5 , 0.5 , 1 , 2 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ]  @=> float times[];

[ 81 , 79 , 81 , 83 , 81 , 79 , 78 , 76 , 67 , 66 , 69 , 67 , 66 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 66 , 67 , 66 , 67 , 69 , 67 , 66 , 67 , 66 , 64 , 64 , 76 , 74 , 76 , 77 , 76 , 74 , 72 , 71 , 79 , 78 , 76 , 78 , 79 , 78 , 81 , 79 , 78 , 76 , 74 , 72 , 72 , 81 , 72 , 71 , 67 , 66 , 66 , 67 , 66 , 73 , 71 , 73 , 74 , 74 , 73 , 71 , 71 , 76 , 79 , 71 , 76 , 79 , 81 , 79 , 78 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 78 , 79 , 79 , 78 , 76 , 74 , 73 , 71 , 73 , 74 , 73 , 74 , 73 , 74 , 73 , 76 , 81 , 79 , 78 , 76 , 74 , 71 , 72 , 71 , 69 , 67 , 66 , 64 , 74 , 74 , 76 , 74 , 73 , 71 , 69 , 79 , 73 , 73 , 74 , 76 , 74 , 73 , 73 , 81 , 79 , 81 , 83 , 81 , 79 , 78 , 76 , 67 , 66 , 69 , 67 , 66 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 69 , 67 , 66 , 67 , 66 , 67 , 69 , 67 , 66 , 67 , 66 , 64 , 64 , 76 , 74 , 76 , 77 , 76 , 74 , 72 , 71 , 79 , 78 , 76 , 78 , 79 , 78 , 81 , 79 , 78 , 76 , 74 , 72 , 72 , 81 , 72 , 71 , 67 , 66 , 66 , 67 , 66 , 73 , 71 , 73 , 74 , 74 , 73 , 71 , 71 , 76 , 79 , 71 , 76 , 79 , 81 , 79 , 78 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 81 , 79 , 78 , 79 , 79 , 78 , 76 , 74 , 73 , 71 , 73 , 74 , 73 , 74 , 73 , 74 , 73 , 76 , 81 , 79 , 78 , 76 , 74 , 71 , 72 , 71 , 69 , 67 , 66 , 64 , 74 , 74 , 76 , 74 , 73 , 71 , 69 , 79 , 73 , 73 , 74 , 76 , 74 , 73 , 73 , 69 , 67 , 71 , 69 , 67 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 72 , 74 , 76 , 76 , 74 , 72 , 71 , 69 , 79 , 78 , 76 , 78 , 75 , 75 , 76 , 75 , 81 , 83 , 81 , 79 , 78 , 76 , 71 , 76 , 78 , 79 , 78 , 78 , 71 , 72 , 71 , 69 , 71 , 79 , 76 , 78 , 75 , 75 , 67 , 66 , 64 , 76 , 76 , 75 , 78 , 79 , 81 , 79 , 78 , 78 , 76 , 78 , 75 , 75 , 76 , 74 , 72 , 71 , 71 , 72 , 74 , 72 , 71 , 72 , 71 , 69 , 69 , 69 , 71 , 72 , 74 , 72 , 71 , 72 , 69 , 64 , 69 , 74 , 72 , 71 , 72 , 69 , 66 , 69 , 72 , 76 , 74 , 72 , 71 , 72 , 71 , 69 , 71 , 67 , 62 , 67 , 71 , 67 , 72 , 74 , 76 , 77 , 76 , 74 , 76 , 72 , 67 , 72 , 76 , 72 , 78 , 79 , 81 , 72 , 71 , 69 , 71 , 72 , 74 , 67 , 71 , 69 , 67 , 66 , 62 , 67 , 66 , 66 , 69 , 67 , 71 , 69 , 67 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 69 , 71 , 72 , 74 , 76 , 76 , 74 , 72 , 71 , 69 , 79 , 78 , 76 , 78 , 75 , 75 , 76 , 75 , 81 , 83 , 81 , 79 , 78 , 76 , 71 , 76 , 78 , 79 , 78 , 78 , 71 , 72 , 71 , 69 , 71 , 79 , 76 , 78 , 75 , 75 , 67 , 66 , 64 , 76 , 76 , 75 , 78 , 79 , 81 , 79 , 78 , 78 , 76 , 78 , 75 , 75 , 76 , 74 , 72 , 71 , 71 , 72 , 74 , 72 , 71 , 72 , 71 , 69 , 69 , 69 , 71 , 72 , 74 , 72 , 71 , 72 , 69 , 64 , 69 , 74 , 72 , 71 , 72 , 69 , 66 , 69 , 72 , 76 , 74 , 72 , 71 , 72 , 71 , 69 , 71 , 67 , 62 , 67 , 71 , 67 , 72 , 74 , 76 , 77 , 76 , 74 , 76 , 72 , 67 , 72 , 76 , 72 , 78 , 79 , 81 , 72 , 71 , 69 , 71 , 72 , 74 , 67 , 71 , 69 , 67 , 66 , 62 , 67 , 66 , 66 ] @=> int notes[];

0 => int i;


fun void pluck( float freq, float L, float R) {
    <<<freq>>>;
    freq => imp.freq;

    L::samp => delay.delay;
    // set dissipation factor
    Math.pow( R, L ) => delay.gain;
    // place zero
    -1 => lowpass.zero;

    1.0 => float ig;
    ig => imp.gain;
    while (ig > 0.0001) {
        0.99 * ig => ig;
        ig => imp.gain;
        Std.rand2(1,10)::samp => now;
    }
    // for one delay round trip
    L::samp => now;
    //L::samp => now;
    // cease fire
    0 => imp.gain;
    
    // advance time
    (Math.log(.0001) / Math.log(R))::samp => now;    
}
while ( i < notes.cap()) {
    i + 1 => i;
    Std.mtof( notes[ i % notes.cap()]   ) => float freq;
    //100 * times[ i % times.cap()]   => L;
    spork ~ pluck( freq, L, R);
    times[ i % times.cap()]/4.0*1000::ms => now;
}
