Step s => dac;
1 => int t => int t16 => int t20 => int x => int y => s.next;
256 => int m;
1.0*m => float mm;
6 => int k;
while( true ) {
    
    //x => y;
    //(t*13 + x >> 3) => x; // 1 tone
    //t * (t*13 + x >> 3) => x; // noise

    //(t>>3)*((t>>3)|(t&t>>9))^(63&(t&t>>12)|(t*t>>4)|(t>>5))=> x; //squishy high
    //(x<<5 + y<<3)%45 >> 5 => y;
    //t16*(5*t&t>>5 + (t&t>>4)|(t*t>>3)^(95&t*t>>6)) => x;
    //t16*(99^t&t>>12) + t*t*t*t>>3 => x; // computer reverb
    //909&t16^169|(t>>10)|128|(t+1024)>>10  => x; // light beeping
    //t*(t ^ t % 13) | (66&t*t%12)>>9 => y; //high drone
    //(t16*t16>>4)|(t*t>>3) => y; // buzz
    //128&(t20>>12)|(96&(t*t16>>5)|((t%99)>>10)) >> 5 => y; //flutter high noise
    //t*((t>>2)|(t>>6))|(2423&(t*t>>3)|(t>>9)|(t*t*t>>12))^127 => x; // loud + white
    //t16*t20>>6 + 666&t*t>>6=>x; // long bleepy
    //t*(t16*t20>>13 + 666&(t*t>>15)|(t>>8)|(t>>6)|(t*21)|(t*3)|(t*7))+t+x=>x; // beat + noise
    //t*(t16*t20>>13 + 666&(t*t>>15)|(t>>4)|(t>>8))+t+x=>x;    // helicopter beat
    //(t^(t%13+1))*(t16*t16>>7 ^ 257&(t*t>>9)|(t16>>6)|(t>>9))*t & 31 + (x-4)&31=>x; //high hiss
    //((x-4)*t16&31 + 44&t&t20>>5)>>9 | 444&((t>>4) | (t>>6)) => x; // low key pulse beat
    //(t%16)*(t%666)&(t%11)&((t%113)>>9)&((t%1117)>>10) << 3=> y;
    //t ^ 63 * t - x * ((y+1)>>4) => y;
    //t*t*((x * y)<<5) | t16&t>>8 => y;
    //y<<3 - t => y;
    //(t*t>>9)>>6^(23&t>>9)^(13&t16>>10) => x;//  - 127&t16*t20>>14) - t)^197 << 6 => x; escalating
    //128&t&t>>14 => x;

    //got a beat
    //(-1 * t<<3) |  (t>>9) | (t>>6) | (t*t >> 5) => x;

    //if (Math.random2(1,10000)==10000) {
    //    Math.random2(4,8) => k;
    //}
//(3*(t-t/7)/99)*(
  //  (-1 * t<<3) |  (t>>9) | (t>>6) | (t*t >> 5)) => x;

    //t*t*t>>4 + 36*t*t>>5 - t>>3 + 66 => x;
    
    t*(((t>>9)|(22^t>>6)|(t20>>7)^(t*t>>9))^(244&(t>>7)|(t16>>5))) => x; //with beat
    x%m / mm - y%m / mm => s.next;
    t + 1 => t;
    t%65536 => t16;
    t%1048576 => t20;
    1::samp => now;
}
